#pragma once


#include "BoundingVolumeComponent.hpp"

#include <glm/glm.hpp>

namespace MFA
{

    class DrawableEssence;
    class TransformComponent;

    class AxisAlignedBoundingBoxComponent final : public BoundingVolumeComponent
    {
    public:

        MFA_COMPONENT_PROPS(AxisAlignedBoundingBoxComponent)
        MFA_COMPONENT_CLASS_TYPE_1(ClassType::AxisAlignedBoundingBoxes)
        
        explicit AxisAlignedBoundingBoxComponent(
            glm::vec3 const & center,
            glm::vec3 const & extend
        );
        
        explicit AxisAlignedBoundingBoxComponent();
        
        void Init() override;

        [[nodiscard]]
        DEBUG_CenterAndRadius DEBUG_GetCenterAndRadius() override;

        void OnUI() override;

    protected:

        bool IsInsideCameraFrustum(CameraComponent const * camera) override;

    private:

        bool mIsAutoGenerated;

        glm::vec3 mCenter {};
        glm::vec3 mExtend {};

        std::weak_ptr<TransformComponent> mTransformComponent {};

    
    };

}
